
#title Archive for December, 2019

#p0
#date 19年12月08日 周日 12:37

## Syncthing

早就想着找一个存储备份照片的工具，虽然有很多在云端保存图片的网站、APP，但所有的这些都有着同样的问题，就是当忘记密码后，哭都来不及。即便绑定了邮箱、手机，也只是多了一层安慰而已。典型的就是雅虎中国gg，我的好多信息都绑定在上面，如果不是某次上去看到消息，真的是要哭死。

还有实际上数字内容虽然提供了方便，比如手机、电脑都可以随便通过网络访问，但是呢，如果不在本地保留一个备份，总觉得这个数字内容在物理上不属于自己。举一个不恰当的例子，你没犯错，机房也有被封的风险，最后即便数据有保全，优先权也不在你这，数据求索之路应该不会很短。所以，也算是一个洁癖的痛苦吧。

以上的讨论不包括安全，讨论安全很危险，还有，对于大部分人来说如果安全只是类似于账号、密码这样的安慰，那就太无聊了。

这里介绍一个内容同步工具，我主要是用于局域网内多设备同步，只是目前设备不包括手机，我觉得就存储来说，手机不是一个很好的设备。再说我有好几台拼凑起来的旧电脑，包括 Mac、Linux、FreeBSD，用这个工具还挺方便的。

大概介绍一下 [Syncthing](https://syncthing.net/) 吧，这是一个去中心化的，基于内容块（类似 BitTorrent）的数据同步、分发工具，注意去中心化跟分布式有本质的不同，后面再详细区分。

支持局域网、广域网的内容同步，可以 NAT 穿透。搜索、数据传输，以及客户端本地文件的管理，在这个软件中是分别用不同的子程序处理的。

由于是开源的 go 编写的软件，我们可以看到整个程序的结构（其实 Wiki 有介绍），甚至可以改写其底层传输协议，不过这里不涉及。

比如客户端发现，用专门的 discov 程序，在客户端配置一节，默认是搜索一个 default 列表的 discov 网站，实际上这里可以填写自己配置的 discov 地址，比如，我只希望发现自己配置的其他的客户端，并做同步。对了，discov 是可以配置数字证书的。

数据传输层，如果是局域网，客户端是可以直接传输的。但是对于一些 NAT 内部的客户端，需要其他客户端帮忙传输的，有一层叫 relay 专门用于数据传输，配置界面上也可以配置为仅仅用于 relay，就是我只传递，但是不保存在本地。

因为是去中心化的客户端，并基于内容块的传输，所以，当你的配置的客户端越多，同步的数据量越大，这个优势也就越大。因为类似 BT，你只在其中一台设备上加了内容，其他的设备，都会优先下载还未下载的内容块，这样，对于后续其他未下载的部分，它们会相互查询、传递。

说下在旧机器上配置自动启动，不管是 Linux、FreeBSD，都不算顺利，一方面是 Unix 特有的多用户权限，另外就是 SystemV、RunScript 在启动配置的不同。我之前操作过其他软件的启动，好些年后再配置，又得重头再走一次，痛苦。

在最后放出配置界面之前，细说一下之前提到的分布式、去中心化的不同。

现在所有涉及到云的都是分布式（distributed），特点是对外表现为一个整体，提供高速响应、高可靠性，但是却可以处理任何单一服务器都无法处理的大规模的请求量、数据量。因为内部需要大量的普通服务器做实际业务处理，这里就涉及到了任务调度、数据同步、可靠性保证等等一系列的问题，为了实现这些基础的能力，需要把不同数据中心、机房的大量的服务器集合起来调度，这就是分布式。分布式是为了对外表现为一个响应的统一整体，因规模变大后而选择的方案。

而去中心化（decentralized）则完全不同，它本质上就不是作为统一整体来响应的，而在当前的技术能力上，做不到分布式统一整体表现的高响应。在设计上，是一个自私的系统，就是只区分我和其他。在设计上，分布式把复杂度放在了系统内部，而去中心化则把复杂度放在了 agent 的交互，总觉得这种交互有很多很多的可能，好玩极了。

最后附录一个配置界面的图片，通过网页配置挺方便的，还可以看到进度。

<img src="http://tva1.sinaimg.cn/mw1024/6f6cc1c0gy1g9pp3ayngij21c00u0apw.jpg" width=640 >

#category Programming

